name: Deploy to Amazon ECR

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-2         
  ECR_REPOSITORY: wiz/test                                      
  CONTAINER_NAME: webgoat-wiz-checkmarx        

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build the application
      run: |
        ./mvnw clean package -DskipTests

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        
    - name: Run Wiz Container Image Scan
      uses: ./.github/actions/wiz-container-scan
      with:
        wiz_client_id: ${{ secrets.WIZ_CLIENT_ID }}
        wiz_client_secret: ${{ secrets.WIZ_CLIENT_SECRET }}
        wiz_container_image: "${{ env.CONTAINER_NAME }}:${{ github.sha }}"
        wiz_scan_policy: 'Custom Policy if needed' # Optional
        wiz_severity_threshold: 'medium' # Optional
        wiz_working_directory: ${{ github.workspace }}
        wiz_fail_build: 'true'
        generate_pr_comment: 'false'
        detailed_results: 'false'

    - name: Push image to Amazon ECR
      id: push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
